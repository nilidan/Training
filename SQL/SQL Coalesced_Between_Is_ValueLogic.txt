/*
* DB: https://www.db-fiddle.com/f/PnGNcaPYfGoEDvfexzEUA/0
* Question: 
* Assuming a students minimum age for the class is 15, what is the average age of a student?
*/
SELECT coalesce(age, 0)) from "Student" where age>=15;
34.25

/*
* DB: https://www.db-fiddle.com/f/PnGNcaPYfGoEDvfexzEUA/0
* Question: 
* Replace all empty first or last names with a default?
*/

Answer:

SELECT coalesce(name, "lastname", 'No Entry')from "Student";

Correct Answer:

SELECT id, coalesce(name, 'fallback') as "First" , coalesce(lastName, 'lastName') as "Last", age FROM "Student";



-- Who between the ages of 30 and 50 has an income less than 50 000?
-- (include 30 and 50 in the results)

/*
* SELECT * FROM customers WHERE age BETWEEN 30 AND 50 AND income < 50000;
*/

SELECT *
FROM customers
WHERE age BETWEEN 30 AND 50 AND income < 50000;

-- What is the average income between the ages of 20 and 50? (Including 20 and 50)
/*
* SELECT AVG(SALARY) FROM customers WHERE age BETWEEN 20 and 50
*/
SELECT AVG(income)
FROM customers
WHERE age BETWEEN 20 AND 50;


Valentine Studio and Postgre Sql database example
/*
* DB: Store
* Table: customers
* Question: adjust the following query to display the null values as "No Address"
*/
SELECT address2 
FROM customers
Ans:
SELECT coalesce(address2,'No Address') as "Address2" FROM customers

Correct:
SELECT COALESCE(address2, 'No Address')
FROM customers

/*
* DB: Store
* Table: customers
* Question: Fix the following query to apply proper 3VL
*/

SELECT *
FROM customers
WHERE COALESCE(address2, null) IS NOT null;

Ans:
SELECT *
FROM customers
WHERE address2 IS NOT null;

Correct:
SELECT *
FROM customers
WHERE address2 IS NOT null;

/*
* DB: Store
* Table: customers
* Question: Fix the following query to apply proper 3VL
*/

SELECT coalesce(lastName, 'Empty'), * from customers
where (age = null);


Ans:
SELECT coalesce(lastName, 'Empty'), * from customers
where (age is not null);

Correct:
SELECT coalesce(lastName, 'Empty'), * from customers
where (age is not null);



/*
IN keyword  allows you use find values matching a list of values 
*/
/*
* DB: Store
* Table: orders
* Question: How many orders were made by customer 7888, 1082, 12808, 9623
*/

SELECT * FROM orders;
Ans:
Query List:
SELECT * FROM orders where customerid IN( 7888, 1082, 12808, 9623)

Count List:
SELECT COUNT(orderid) FROM orders where customerid IN( 7888, 1082, 12808, 9623)

SELECT COUNT(orderid)
FROM orders
WHERE customerid IN (7888, 1082, 12808, 9623)

/*
* DB: World
* Table: city
* Question: How many cities are in the district of Zuid-Holland, Noord-Brabant and Utrecht?
*/

SELECT * FROM city;

Ans:
Query List:
SELECT * FROM city where district IN('Zuid-Holland', 'Noord-Brabant','Utrecht')

Count List:
SELECT count(id) FROM city where district IN('Zuid-Holland', 'Noord-Brabant','Utrecht')


SELECT COUNT(id)
FROM city
WHERE district IN ('Zuid-Holland', 'Noord-Brabant', 'Utrecht');
